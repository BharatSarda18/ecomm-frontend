{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { addToCart, fetchItemsByUserId, updateCart, deleteItemFromCart, resetCart } from \"../services/cartService\";\nexport const addToCartAsync = createAsyncThunk('cart/addToCart', async ({\n  item,\n  alert\n}) => {\n  const response = await addToCart(item);\n  alert.success('Item Added to Cart');\n\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchItemsByUserIdAsync = createAsyncThunk('cart/fetchItemsByUserId', async () => {\n  const response = await fetchItemsByUserId();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateCartAsync = createAsyncThunk('cart/updateCart', async update => {\n  const response = await updateCart(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const deleteItemFromCartAsync = createAsyncThunk('cart/deleteItemFromCart', async itemId => {\n  const response = await deleteItemFromCart(itemId);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const resetCartAsync = createAsyncThunk('cart/resetCart', async () => {\n  const response = await resetCart();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    status: 'idle',\n    items: [],\n    cartLoaded: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginUserAsync.pending, state => {}).addCase(loginUserAsync.fulfilled, state => {}).addCase(loginUserAsync.rejected, state => {});\n    builder.addCase(loginUserAsync.pending, state => {}).addCase(loginUserAsync.fulfilled, state => {}).addCase(loginUserAsync.rejected, state => {});\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addToCart","fetchItemsByUserId","updateCart","deleteItemFromCart","resetCart","addToCartAsync","item","alert","response","success","data","fetchItemsByUserIdAsync","updateCartAsync","update","deleteItemFromCartAsync","itemId","resetCartAsync","cartSlice","name","initialState","status","items","cartLoaded","reducers","extraReducers","builder","addCase","loginUserAsync","pending","state","fulfilled","rejected","reducer"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/redux/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { addToCart,fetchItemsByUserId,updateCart,deleteItemFromCart,resetCart } from \"../services/cartService\";\n\nexport const addToCartAsync = createAsyncThunk(\n    'cart/addToCart',\n    async ({item, alert}) => {\n      const response = await addToCart(item);\n      alert.success('Item Added to Cart');\n  \n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n);\n  \n  export const fetchItemsByUserIdAsync = createAsyncThunk(\n    'cart/fetchItemsByUserId',\n    async () => {\n      const response = await fetchItemsByUserId();\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const updateCartAsync = createAsyncThunk(\n    'cart/updateCart',\n    async (update) => {\n      const response = await updateCart(update);\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const deleteItemFromCartAsync = createAsyncThunk(\n    'cart/deleteItemFromCart',\n    async (itemId) => {\n      const response = await deleteItemFromCart(itemId);\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const resetCartAsync = createAsyncThunk(\n    'cart/resetCart',\n    async () => {\n      const response = await resetCart();\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n\nexport const cartSlice=createSlice({\n    name:'cart',\n    initialState:{\n        status: 'idle',\n        items: [],\n        cartLoaded: false\n    },\n    reducers:{},\n    extraReducers:(builder)=>{\n        builder.addCase(loginUserAsync.pending, (state) => { })\n        .addCase(loginUserAsync.fulfilled, (state) => { })\n        .addCase(loginUserAsync.rejected, (state) => { })\n\n        builder.addCase(loginUserAsync.pending, (state) => { })\n        .addCase(loginUserAsync.fulfilled, (state) => { })\n        .addCase(loginUserAsync.rejected, (state) => { })\n    }\n\n})\n\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,SAAS,EAACC,kBAAkB,EAACC,UAAU,EAACC,kBAAkB,EAACC,SAAS,QAAQ,yBAAyB;AAE9G,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC1C,gBAAgB,EAChB,OAAO;EAACQ,IAAI;EAAEC;AAAK,CAAC,KAAK;EACvB,MAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACM,IAAI,CAAC;EACtCC,KAAK,CAACE,OAAO,CAAC,oBAAoB,CAAC;;EAEnC;EACA,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACJ,CAAC;AAEC,OAAO,MAAMC,uBAAuB,GAAGb,gBAAgB,CACrD,yBAAyB,EACzB,YAAY;EACV,MAAMU,QAAQ,GAAG,MAAMP,kBAAkB,CAAC,CAAC;EAC3C;EACA,OAAOO,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAGd,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOe,MAAM,IAAK;EAChB,MAAML,QAAQ,GAAG,MAAMN,UAAU,CAACW,MAAM,CAAC;EACzC;EACA,OAAOL,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMI,uBAAuB,GAAGhB,gBAAgB,CACrD,yBAAyB,EACzB,MAAOiB,MAAM,IAAK;EAChB,MAAMP,QAAQ,GAAG,MAAML,kBAAkB,CAACY,MAAM,CAAC;EACjD;EACA,OAAOP,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAGlB,gBAAgB,CAC5C,gBAAgB,EAChB,YAAY;EACV,MAAMU,QAAQ,GAAG,MAAMJ,SAAS,CAAC,CAAC;EAClC;EACA,OAAOI,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAEH,OAAO,MAAMO,SAAS,GAAClB,WAAW,CAAC;EAC/BmB,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CAACC,OAAO,CAACC,cAAc,CAACC,OAAO,EAAGC,KAAK,IAAK,CAAE,CAAC,CAAC,CACtDH,OAAO,CAACC,cAAc,CAACG,SAAS,EAAGD,KAAK,IAAK,CAAE,CAAC,CAAC,CACjDH,OAAO,CAACC,cAAc,CAACI,QAAQ,EAAGF,KAAK,IAAK,CAAE,CAAC,CAAC;IAEjDJ,OAAO,CAACC,OAAO,CAACC,cAAc,CAACC,OAAO,EAAGC,KAAK,IAAK,CAAE,CAAC,CAAC,CACtDH,OAAO,CAACC,cAAc,CAACG,SAAS,EAAGD,KAAK,IAAK,CAAE,CAAC,CAAC,CACjDH,OAAO,CAACC,cAAc,CAACI,QAAQ,EAAGF,KAAK,IAAK,CAAE,CAAC,CAAC;EACrD;AAEJ,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}