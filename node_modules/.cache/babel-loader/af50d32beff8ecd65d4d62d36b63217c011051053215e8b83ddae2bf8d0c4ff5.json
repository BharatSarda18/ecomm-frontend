{"ast":null,"code":"var _jsxFileName = \"/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/pages/StripeCheckoutPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { useSelector } from 'react-redux';\nimport CheckoutForm from \"./CheckoutForm\";\nimport \"../Stripe.css\";\nimport { selectCurrentOrder } from \"../redux/orderSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StripeCheckoutPage() {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const currentOrder = useSelector(state => state.order.currentOrder);\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        totalAmount: currentOrder.totalAmount,\n        orderId: currentOrder.id\n      })\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, []);\n  const appearance = {\n    theme: 'stripe'\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stripe\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      options: options,\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(StripeCheckoutPage, \"ji+sfT2R3pmlIFguniDiBxx+56Q=\", false, function () {\n  return [useSelector];\n});\n_c = StripeCheckoutPage;\n;\nvar _c;\n$RefreshReg$(_c, \"StripeCheckoutPage\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","Elements","useSelector","CheckoutForm","selectCurrentOrder","jsxDEV","_jsxDEV","StripeCheckoutPage","_s","clientSecret","setClientSecret","currentOrder","state","order","fetch","method","headers","body","JSON","stringify","totalAmount","orderId","id","then","res","json","data","appearance","theme","options","className","children","stripe","stripePromise","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/pages/StripeCheckoutPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { useSelector } from 'react-redux';\n\nimport CheckoutForm from \"./CheckoutForm\";\nimport \"../Stripe.css\";\nimport { selectCurrentOrder } from \"../redux/orderSlice\";\n\nexport default function StripeCheckoutPage() {\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const currentOrder = useSelector((state) => state.order.currentOrder)\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ totalAmount: currentOrder.totalAmount, orderId:currentOrder.id }),\n    \n    })\n      .then((res) => res.json())\n      .then((data) => setClientSecret(data.clientSecret));\n  }, []);\n\n  const appearance = {\n    theme: 'stripe',\n  };\n  const options = {\n    clientSecret,\n    appearance,\n  };\n  return (\n    <div className=\"Stripe\">\n    {clientSecret && (\n      <Elements options={options} stripe={stripePromise}>\n        <CheckoutForm />\n      </Elements>\n    )}\n  </div>\n  )\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,eAAe;AACtB,SAASC,kBAAkB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMa,YAAY,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,YAAY,CAAC;EAErEZ,SAAS,CAAC,MAAM;IACd;IACAe,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,WAAW,EAAET,YAAY,CAACS,WAAW;QAAEC,OAAO,EAACV,YAAY,CAACW;MAAG,CAAC;IAEzF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKhB,eAAe,CAACgB,IAAI,CAACjB,YAAY,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,UAAU,GAAG;IACjBC,KAAK,EAAE;EACT,CAAC;EACD,MAAMC,OAAO,GAAG;IACdpB,YAAY;IACZkB;EACF,CAAC;EACD,oBACErB,OAAA;IAAKwB,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACtBtB,YAAY,iBACXH,OAAA,CAACL,QAAQ;MAAC4B,OAAO,EAAEA,OAAQ;MAACG,MAAM,EAAEC,aAAc;MAAAF,QAAA,eAChDzB,OAAA,CAACH,YAAY;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER;AAAC7B,EAAA,CAhCuBD,kBAAkB;EAAA,QAEnBL,WAAW;AAAA;AAAAoC,EAAA,GAFV/B,kBAAkB;AAgCzC;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}