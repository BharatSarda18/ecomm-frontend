{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchLoggedInUser, fetchLoggedInUserOrders } from \"../services/userService\";\nexport const fetchLoggedInUserOrderAsync = createAsyncThunk('user/fetchLoggedInUserOrders', async () => {\n  const response = await fetchLoggedInUserOrders();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchLoggedInUserAsync = createAsyncThunk('user/fetchLoggedInUser', async () => {\n  const response = await fetchLoggedInUser();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const updateUserAsync = createAsyncThunk('user/updateUser', async update => {\n  // this is name mistake\n  const response = await updateUser(update);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {},\n  reducers: {\n    status: 'idle',\n    userInfo: null\n  },\n  extraReducers: builder => {}\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchLoggedInUser","fetchLoggedInUserOrders","fetchLoggedInUserOrderAsync","response","data","fetchLoggedInUserAsync","updateUserAsync","update","updateUser","userSlice","name","initialState","reducers","status","userInfo","extraReducers","builder","reducer"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/redux/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchLoggedInUser,fetchLoggedInUserOrders } from \"../services/userService\";\n\nexport const fetchLoggedInUserOrderAsync = createAsyncThunk(\n  'user/fetchLoggedInUserOrders',\n  async () => {\n    const response = await fetchLoggedInUserOrders();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchLoggedInUserAsync = createAsyncThunk(\n  'user/fetchLoggedInUser',\n  async () => {\n    const response = await fetchLoggedInUser();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const updateUserAsync = createAsyncThunk(\n  'user/updateUser',\n  async (update) => {\n    // this is name mistake\n    const response = await updateUser(update);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {},\n  reducers: {\n    status: 'idle',\n    userInfo: null,\n  },\n  extraReducers: (builder) => { }\n});\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,iBAAiB,EAACC,uBAAuB,QAAQ,yBAAyB;AAEnF,OAAO,MAAMC,2BAA2B,GAAGJ,gBAAgB,CACzD,8BAA8B,EAC9B,YAAY;EACV,MAAMK,QAAQ,GAAG,MAAMF,uBAAuB,CAAC,CAAC;EAChD;EACA,OAAOE,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAGP,gBAAgB,CACpD,wBAAwB,EACxB,YAAY;EACV,MAAMK,QAAQ,GAAG,MAAMH,iBAAiB,CAAC,CAAC;EAC1C;EACA,OAAOG,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAGR,gBAAgB,CAC7C,iBAAiB,EACjB,MAAOS,MAAM,IAAK;EAChB;EACA,MAAMJ,QAAQ,GAAG,MAAMK,UAAU,CAACD,MAAM,CAAC;EACzC;EACA,OAAOJ,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAGD,OAAO,MAAMK,SAAS,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,CAAC,CAAC;EAChBC,QAAQ,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK,CAAE;AAChC,CAAC,CAAC;AAEF,eAAeP,SAAS,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}