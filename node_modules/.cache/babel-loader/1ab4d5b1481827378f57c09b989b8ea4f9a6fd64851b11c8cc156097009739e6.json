{"ast":null,"code":"var _jsxFileName = \"/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/components/product/ProductDetail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { StarIcon } from '@heroicons/react/20/solid';\nimport { RadioGroup } from '@headlessui/react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {\n//   fetchProductByIdAsync,\n//   selectProductById,\n//   selectProductListStatus,\n// } from '../productSlice';\nimport { useParams } from 'react-router-dom';\n// import { addToCartAsync, selectItems } from '../../cart/cartSlice';\n// import { selectLoggedInUser } from '../../auth/authSlice';\nimport { useAlert } from 'react-alert';\nimport { addToCartAsync, fetchItemsByUserIdAsync } from \"../../redux/cartSlice\";\nimport { fetchProductByIdAsync } from \"../../redux/productSlice\";\nimport { Grid } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\nexport default function ProductDetail() {\n  _s();\n  const [selectedColor, setSelectedColor] = useState();\n  const [selectedSize, setSelectedSize] = useState();\n  const items = useSelector(state => state.cart.items);\n  const product = useSelector(state => state.product.selectedProduct);\n  const dispatch = useDispatch();\n  const params = useParams();\n  // console.log(params,\"p===>\")\n  // const alert = useAlert();\n  const status = useSelector(state => state.product.status);\n  const handleCart = e => {\n    e.preventDefault();\n    if (items.findIndex(item => item.product.id === product.id) < 0) {\n      console.log({\n        items,\n        product\n      });\n      const newItem = {\n        product: product.id,\n        quantity: 1\n      };\n      if (selectedColor) {\n        newItem.color = selectedColor;\n      }\n      if (selectedSize) {\n        newItem.size = selectedSize;\n      }\n      dispatch(addToCartAsync({\n        item: newItem,\n        alert\n      }));\n    } else {\n      alert.error('Item Already added');\n    }\n  };\n  useEffect(() => {\n    console.log(params, \"p===>\");\n    dispatch(fetchProductByIdAsync(params._id));\n  }, [params._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white\",\n    children: status === 'loading' ? /*#__PURE__*/_jsxDEV(Grid, {\n      height: \"80\",\n      width: \"80\",\n      color: \"rgb(79, 70, 229) \",\n      ariaLabel: \"grid-loading\",\n      radius: \"12.5\",\n      wrapperStyle: {},\n      wrapperClass: \"\",\n      visible: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductDetail, \"xpzOiGIh132BWxh54SFMDTH5uKg=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useParams, useSelector];\n});\n_c = ProductDetail;\n;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["useState","useEffect","StarIcon","RadioGroup","useDispatch","useSelector","useParams","useAlert","addToCartAsync","fetchItemsByUserIdAsync","fetchProductByIdAsync","Grid","jsxDEV","_jsxDEV","classNames","classes","filter","Boolean","join","ProductDetail","_s","selectedColor","setSelectedColor","selectedSize","setSelectedSize","items","state","cart","product","selectedProduct","dispatch","params","status","handleCart","e","preventDefault","findIndex","item","id","console","log","newItem","quantity","color","size","alert","error","_id","className","children","height","width","ariaLabel","radius","wrapperStyle","wrapperClass","visible","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/components/product/ProductDetail.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { StarIcon } from '@heroicons/react/20/solid';\nimport { RadioGroup } from '@headlessui/react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import {\n//   fetchProductByIdAsync,\n//   selectProductById,\n//   selectProductListStatus,\n// } from '../productSlice';\nimport { useParams } from 'react-router-dom';\n// import { addToCartAsync, selectItems } from '../../cart/cartSlice';\n// import { selectLoggedInUser } from '../../auth/authSlice';\nimport { useAlert } from 'react-alert';\nimport {addToCartAsync, fetchItemsByUserIdAsync} from \"../../redux/cartSlice\";\nimport {fetchProductByIdAsync} from \"../../redux/productSlice\";\nimport { Grid } from 'react-loader-spinner';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport default function ProductDetail() {\n \n  const [selectedColor, setSelectedColor] = useState();\n  const [selectedSize, setSelectedSize] = useState();\n  const items = useSelector((state) => state.cart.items);\n  const product = useSelector((state) => state.product.selectedProduct);\n   const dispatch = useDispatch();\n   const params = useParams();\n  // console.log(params,\"p===>\")\n  // const alert = useAlert();\n   const status = useSelector((state) => state.product.status);\n  \n  const handleCart = (e) => {\n    e.preventDefault();\n    if (items.findIndex((item) => item.product.id === product.id) < 0) {\n      console.log({ items, product });\n      const newItem = {\n        product: product.id,\n        quantity: 1,\n      };\n      if (selectedColor) {\n        newItem.color = selectedColor;\n      }\n      if (selectedSize) {\n        newItem.size = selectedSize;\n      }\n      dispatch(addToCartAsync({item:newItem, alert}));\n    } else {\n      alert.error('Item Already added');\n    }\n  };\n\n  useEffect(() => {\n    console.log(params,\"p===>\")\n    dispatch(fetchProductByIdAsync(params._id));\n  }, [ params._id]);\n\n  return (\n    <div className=\"bg-white\">\n      {status === 'loading' ? (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"rgb(79, 70, 229) \"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      ) : null}\n      {/* {product && (\n        <div className=\"pt-6\">\n          <nav aria-label=\"Breadcrumb\">\n            <ol className=\"mx-auto flex max-w-2xl items-center space-x-2 px-4 sm:px-6 lg:max-w-7xl lg:px-8\">\n              {product.breadcrumbs &&\n                product.breadcrumbs.map((breadcrumb) => (\n                  <li key={breadcrumb.id}>\n                    <div className=\"flex items-center\">\n                      <a\n                        href={breadcrumb.href}\n                        className=\"mr-2 text-sm font-medium text-gray-900\"\n                      >\n                        {breadcrumb.name}\n                      </a>\n                      <svg\n                        width={16}\n                        height={20}\n                        viewBox=\"0 0 16 20\"\n                        fill=\"currentColor\"\n                        aria-hidden=\"true\"\n                        className=\"h-5 w-4 text-gray-300\"\n                      >\n                        <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n                      </svg>\n                    </div>\n                  </li>\n                ))}\n              <li className=\"text-sm\">\n                <a\n                  href={product.href}\n                  aria-current=\"page\"\n                  className=\"font-medium text-gray-500 hover:text-gray-600\"\n                >\n                  {product.title}\n                </a>\n              </li>\n            </ol>\n          </nav>\n\n        \n          <div className=\"mx-auto mt-6 max-w-2xl sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8\">\n            <div className=\"aspect-h-4 aspect-w-3 hidden overflow-hidden rounded-lg lg:block\">\n              <img\n                src={product.images[0]}\n                alt={product.title}\n                className=\"h-full w-full object-cover object-center\"\n              />\n            </div>\n            <div className=\"hidden lg:grid lg:grid-cols-1 lg:gap-y-8\">\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\n                <img\n                  src={product.images[1]}\n                  alt={product.title}\n                  className=\"h-full w-full object-cover object-center\"\n                />\n              </div>\n              <div className=\"aspect-h-2 aspect-w-3 overflow-hidden rounded-lg\">\n                <img\n                  src={product.images[2]}\n                  alt={product.title}\n                  className=\"h-full w-full object-cover object-center\"\n                />\n              </div>\n            </div>\n            <div className=\"aspect-h-5 aspect-w-4 lg:aspect-h-4 lg:aspect-w-3 sm:overflow-hidden sm:rounded-lg\">\n              <img\n                src={product.images[3]}\n                alt={product.title}\n                className=\"h-full w-full object-cover object-center\"\n              />\n            </div>\n          </div>\n\n       \n          <div className=\"mx-auto max-w-2xl px-4 pb-16 pt-10 sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:px-8 lg:pb-24 lg:pt-16\">\n            <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n              <h1 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">\n                {product.title}\n              </h1>\n            </div>\n\n          \n            <div className=\"mt-4 lg:row-span-3 lg:mt-0\">\n              <h2 className=\"sr-only\">Product information</h2>\n              <p className=\"text-xl line-through tracking-tight text-gray-900\">\n                ${product.price}\n              </p>\n              <p className=\"text-3xl tracking-tight text-gray-900\">\n                ${product.discountPrice}\n              </p>\n\n             \n              <div className=\"mt-6\">\n                <h3 className=\"sr-only\">Reviews</h3>\n                <div className=\"flex items-center\">\n                  <div className=\"flex items-center\">\n                    {[0, 1, 2, 3, 4].map((rating) => (\n                      <StarIcon\n                        key={rating}\n                        className={classNames(\n                          product.rating > rating\n                            ? 'text-gray-900'\n                            : 'text-gray-200',\n                          'h-5 w-5 flex-shrink-0'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    ))}\n                  </div>\n                  <p className=\"sr-only\">{product.rating} out of 5 stars</p>\n                </div>\n              </div>\n\n              <form className=\"mt-10\">\n              \n                {product.colors && product.colors.length > 0 && (\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-900\">Color</h3>\n\n                    <RadioGroup\n                      value={selectedColor}\n                      onChange={setSelectedColor}\n                      className=\"mt-4\"\n                    >\n                      <RadioGroup.Label className=\"sr-only\">\n                        Choose a color\n                      </RadioGroup.Label>\n                      <div className=\"flex items-center space-x-3\">\n                        {product.colors.map((color) => (\n                          <RadioGroup.Option\n                            key={color.name}\n                            value={color}\n                            className={({ active, checked }) =>\n                              classNames(\n                                color.selectedClass,\n                                active && checked ? 'ring ring-offset-1' : '',\n                                !active && checked ? 'ring-2' : '',\n                                'relative -m-0.5 flex cursor-pointer items-center justify-center rounded-full p-0.5 focus:outline-none'\n                              )\n                            }\n                          >\n                            <RadioGroup.Label as=\"span\" className=\"sr-only\">\n                              {color.name}\n                            </RadioGroup.Label>\n                            <span\n                              aria-hidden=\"true\"\n                              className={classNames(\n                                color.class,\n                                'h-8 w-8 rounded-full border border-black border-opacity-10'\n                              )}\n                            />\n                          </RadioGroup.Option>\n                        ))}\n                      </div>\n                    </RadioGroup>\n                  </div>\n                )}\n\n               \n                {product.sizes && product.sizes.length > 0 && (\n                  <div className=\"mt-10\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"text-sm font-medium text-gray-900\">\n                        Size\n                      </h3>\n                      <a\n                        href=\"#\"\n                        className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\"\n                      >\n                        Size guide\n                      </a>\n                    </div>\n\n                    <RadioGroup\n                      value={selectedSize}\n                      onChange={setSelectedSize}\n                      className=\"mt-4\"\n                    >\n                      <RadioGroup.Label className=\"sr-only\">\n                        Choose a size\n                      </RadioGroup.Label>\n                      <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\n                        {product.sizes.map((size) => (\n                          <RadioGroup.Option\n                            key={size.name}\n                            value={size}\n                            disabled={!size.inStock}\n                            className={({ active }) =>\n                              classNames(\n                                size.inStock\n                                  ? 'cursor-pointer bg-white text-gray-900 shadow-sm'\n                                  : 'cursor-not-allowed bg-gray-50 text-gray-200',\n                                active ? 'ring-2 ring-indigo-500' : '',\n                                'group relative flex items-center justify-center rounded-md border py-3 px-4 text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6'\n                              )\n                            }\n                          >\n                            {({ active, checked }) => (\n                              <>\n                                <RadioGroup.Label as=\"span\">\n                                  {size.name}\n                                </RadioGroup.Label>\n                                {size.inStock ? (\n                                  <span\n                                    className={classNames(\n                                      active ? 'border' : 'border-2',\n                                      checked\n                                        ? 'border-indigo-500'\n                                        : 'border-transparent',\n                                      'pointer-events-none absolute -inset-px rounded-md'\n                                    )}\n                                    aria-hidden=\"true\"\n                                  />\n                                ) : (\n                                  <span\n                                    aria-hidden=\"true\"\n                                    className=\"pointer-events-none absolute -inset-px rounded-md border-2 border-gray-200\"\n                                  >\n                                    <svg\n                                      className=\"absolute inset-0 h-full w-full stroke-2 text-gray-200\"\n                                      viewBox=\"0 0 100 100\"\n                                      preserveAspectRatio=\"none\"\n                                      stroke=\"currentColor\"\n                                    >\n                                      <line\n                                        x1={0}\n                                        y1={100}\n                                        x2={100}\n                                        y2={0}\n                                        vectorEffect=\"non-scaling-stroke\"\n                                      />\n                                    </svg>\n                                  </span>\n                                )}\n                              </>\n                            )}\n                          </RadioGroup.Option>\n                        ))}\n                      </div>\n                    </RadioGroup>\n                  </div>\n                )}\n\n                <button\n                  onClick={handleCart}\n                  type=\"submit\"\n                  className=\"mt-10 flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                >\n                  Add to Cart\n                </button>\n              </form>\n            </div>\n\n            <div className=\"py-10 lg:col-span-2 lg:col-start-1 lg:border-r lg:border-gray-200 lg:pb-16 lg:pr-8 lg:pt-6\">\n            \n              <div>\n                <h3 className=\"sr-only\">Description</h3>\n\n                <div className=\"space-y-6\">\n                  <p className=\"text-base text-gray-900\">\n                    {product.description}\n                  </p>\n                </div>\n              </div>\n\n              {product.highlights && (\n                <div className=\"mt-10\">\n                  <h3 className=\"text-sm font-medium text-gray-900\">\n                    Highlights\n                  </h3>\n\n                  <div className=\"mt-4\">\n                    <ul\n                      role=\"list\"\n                      className=\"list-disc space-y-2 pl-4 text-sm\"\n                    >\n                      {product.highlights.map((highlight) => (\n                        <li key={highlight} className=\"text-gray-400\">\n                          <span className=\"text-gray-600\">{highlight}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"mt-10\">\n                <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\n\n                <div className=\"mt-4 space-y-6\">\n                  <p className=\"text-sm text-gray-600\">{product.description}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )} */}\n    </div>\n  )\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}