{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createProduct, fetchBrands, fetchCategories, fetchProductById, fetchProductsByFilters, updateProduct } from \"../services/productService\";\ncreate;\nexport const fetchProductByIdAsync = createAsyncThunk('product/fetchProductById', async id => {\n  const response = await fetchProductById(id);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async ({\n  filter,\n  sort,\n  pagination,\n  admin\n}) => {\n  const response = await fetchProductsByFilters(filter, sort, pagination, admin);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const createProductAsync = createAsyncThunk('product/create', async product => {\n  const response = await createProduct(product);\n  return response.data;\n});\nexport const updateProductAsync = createAsyncThunk('product/update', async update => {\n  const response = await updateProduct(update);\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: [],\n    brands: [],\n    categories: [],\n    status: 'idle',\n    totalItems: 0,\n    selectedProduct: null\n  },\n  reducers: {\n    clearSelectedProduct: state => {\n      state.selectedProduct = null;\n    }\n  },\n  extraReducers: builder => {}\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createProduct","fetchBrands","fetchCategories","fetchProductById","fetchProductsByFilters","updateProduct","create","fetchProductByIdAsync","createAsyncThunk","id","response","data","fetchProductsByFiltersAsync","filter","sort","pagination","admin","fetchBrandsAsync","fetchCategoriesAsync","createProductAsync","product","updateProductAsync","update","productSlice","name","initialState","products","brands","categories","status","totalItems","selectedProduct","reducers","clearSelectedProduct","state","extraReducers","builder","reducer"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/redux/productSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createProduct, fetchBrands, fetchCategories, fetchProductById, fetchProductsByFilters, updateProduct } from \"../services/productService\";\ncreate\nexport const fetchProductByIdAsync = createAsyncThunk(\n    'product/fetchProductById',\n    async (id) => {\n      const response = await fetchProductById(id);\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const fetchProductsByFiltersAsync = createAsyncThunk(\n    'product/fetchProductsByFilters',\n    async ({ filter, sort, pagination, admin }) => {\n      const response = await fetchProductsByFilters(filter, sort, pagination, admin);\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const fetchBrandsAsync = createAsyncThunk(\n    'product/fetchBrands',\n    async () => {\n      const response = await fetchBrands();\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  export const fetchCategoriesAsync = createAsyncThunk(\n    'product/fetchCategories',\n    async () => {\n      const response = await fetchCategories();\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n  );\n  \n  export const createProductAsync = createAsyncThunk(\n    'product/create',\n    async (product) => {\n      const response = await createProduct(product);\n      return response.data;\n    }\n  );\n  \n  export const updateProductAsync = createAsyncThunk(\n    'product/update',\n    async (update) => {\n      const response = await updateProduct(update);\n      return response.data;\n    }\n  );\n\n  \nexport const productSlice=createSlice({\n    name:'product',\n    initialState:{\n        products: [],\n        brands: [],\n        categories: [],\n        status: 'idle',\n        totalItems: 0,\n        selectedProduct: null,\n    },\n    reducers:{\n        clearSelectedProduct:(state)=>{\n            state.selectedProduct = null\n        }\n    },\n    extraReducers:(builder)=>{}\n});\n\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,WAAW,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,sBAAsB,EAAEC,aAAa,QAAQ,4BAA4B;AACjJC,MAAM;AACN,OAAO,MAAMC,qBAAqB,GAAGC,gBAAgB,CACjD,0BAA0B,EAC1B,MAAOC,EAAE,IAAK;EACZ,MAAMC,QAAQ,GAAG,MAAMP,gBAAgB,CAACM,EAAE,CAAC;EAC3C;EACA,OAAOC,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAGJ,gBAAgB,CACzD,gCAAgC,EAChC,OAAO;EAAEK,MAAM;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EAC7C,MAAMN,QAAQ,GAAG,MAAMN,sBAAsB,CAACS,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,CAAC;EAC9E;EACA,OAAON,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGT,gBAAgB,CAC9C,qBAAqB,EACrB,YAAY;EACV,MAAME,QAAQ,GAAG,MAAMT,WAAW,CAAC,CAAC;EACpC;EACA,OAAOS,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AACD,OAAO,MAAMO,oBAAoB,GAAGV,gBAAgB,CAClD,yBAAyB,EACzB,YAAY;EACV,MAAME,QAAQ,GAAG,MAAMR,eAAe,CAAC,CAAC;EACxC;EACA,OAAOQ,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMQ,kBAAkB,GAAGX,gBAAgB,CAChD,gBAAgB,EAChB,MAAOY,OAAO,IAAK;EACjB,MAAMV,QAAQ,GAAG,MAAMV,aAAa,CAACoB,OAAO,CAAC;EAC7C,OAAOV,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAGb,gBAAgB,CAChD,gBAAgB,EAChB,MAAOc,MAAM,IAAK;EAChB,MAAMZ,QAAQ,GAAG,MAAML,aAAa,CAACiB,MAAM,CAAC;EAC5C,OAAOZ,QAAQ,CAACC,IAAI;AACtB,CACF,CAAC;AAGH,OAAO,MAAMY,YAAY,GAACxB,WAAW,CAAC;EAClCyB,IAAI,EAAC,SAAS;EACdC,YAAY,EAAC;IACTC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,MAAM;IACdC,UAAU,EAAE,CAAC;IACbC,eAAe,EAAE;EACrB,CAAC;EACDC,QAAQ,EAAC;IACLC,oBAAoB,EAAEC,KAAK,IAAG;MAC1BA,KAAK,CAACH,eAAe,GAAG,IAAI;IAChC;EACJ,CAAC;EACDI,aAAa,EAAEC,OAAO,IAAG,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeb,YAAY,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}