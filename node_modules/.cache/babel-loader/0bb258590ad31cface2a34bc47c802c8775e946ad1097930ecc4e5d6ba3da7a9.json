{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser, loginUser, resetPasswordRequest, checkAuth, resetPassword } from \"../services/authService\";\nexport const loginUserAsync = createAsyncThunk(\"user/loginUser\", async (loginInfo, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await loginUser(loginInfo);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error);\n  }\n});\nexport const createUserAsync = createAsyncThunk('user/createUser', async userData => {\n  const response = await createUser(userData);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const checkAuthAsync = createAsyncThunk('user/checkAuth', async () => {\n  try {\n    const response = await checkAuth();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const resetPasswordRequestAsync = createAsyncThunk('user/resetPasswordRequest', async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await resetPasswordRequest(email);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const resetPasswordAsync = createAsyncThunk('user/resetPassword', async (data, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await resetPassword(data);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const signOutAsync = createAsyncThunk('user/signOut', async () => {\n  const response = await signOut();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    loggedInUserToken: null,\n    // this should only contain user identity => 'id'/'role'\n    status: 'idle',\n    error: null,\n    userChecked: false,\n    mailSent: false,\n    passwordReset: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginUserAsync.pending, state => {}), builder.addCase(loginUserAsync.fulfilled, state => {}), builder.addCase(loginUserAsync.rejected, state => {}), builder.addCase(createUserAsync.pending, state => {\n      state.status = 'loading';\n    });\n    builder.addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUserToken = action.payload;\n    });\n    builder.addCase(checkAuthAsync.pending, state => {}), builder.addCase(checkAuthAsync.fulfilled, state => {}), builder.addCase(checkAuthAsync.rejected, state => {});\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createUser","loginUser","resetPasswordRequest","checkAuth","resetPassword","loginUserAsync","loginInfo","rejectWithValue","response","data","error","createUserAsync","userData","checkAuthAsync","console","log","resetPasswordRequestAsync","email","resetPasswordAsync","signOutAsync","signOut","authSlice","name","initialState","loggedInUserToken","status","userChecked","mailSent","passwordReset","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","reducer"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/redux/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { createUser, loginUser,resetPasswordRequest,checkAuth,resetPassword } from \"../services/authService\";\n\nexport const loginUserAsync = createAsyncThunk(\n    \"user/loginUser\",\n    async (loginInfo, { rejectWithValue }) => {\n        try {\n            const response = await loginUser(loginInfo);\n            return response.data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    }\n);\n\nexport const createUserAsync = createAsyncThunk(\n    'user/createUser',\n    async (userData) => {\n        const response = await createUser(userData);\n        // The value we return becomes the `fulfilled` action payload\n        return response.data;\n    }\n);\n\nexport const checkAuthAsync = createAsyncThunk('user/checkAuth', async () => {\n    try {\n      const response = await checkAuth();\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n});\n\nexport const resetPasswordRequestAsync = createAsyncThunk(\n    'user/resetPasswordRequest',\n    async (email,{rejectWithValue}) => {\n      try {\n        const response = await resetPasswordRequest(email);\n        return response.data;\n      } catch (error) {\n        console.log(error);\n        return rejectWithValue(error);\n  \n      }\n    }\n);\n  \nexport const resetPasswordAsync = createAsyncThunk(\n    'user/resetPassword',\n    async (data,{rejectWithValue}) => {\n      try {\n        const response = await resetPassword(data);\n        console.log(response);\n        return response.data;\n      } catch (error) {\n        console.log(error);\n        return rejectWithValue(error);\n  \n      }\n    }\n);\n  \nexport const signOutAsync = createAsyncThunk(\n    'user/signOut',\n    async () => {\n      const response = await signOut();\n      // The value we return becomes the `fulfilled` action payload\n      return response.data;\n    }\n);\n\n\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        loggedInUserToken: null, // this should only contain user identity => 'id'/'role'\n        status: 'idle',\n        error: null,\n        userChecked: false,\n        mailSent: false,\n        passwordReset: false\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder.addCase(loginUserAsync.pending, (state) => { }),\n        builder.addCase(loginUserAsync.fulfilled, (state) => { }),\n        builder.addCase(loginUserAsync.rejected, (state) => { }),\n\n        builder.addCase(createUserAsync.pending, (state) => {\n            state.status = 'loading';\n        })\n        builder.addCase(createUserAsync.fulfilled, (state, action) => {\n            state.status = 'idle';\n            state.loggedInUserToken = action.payload;\n        })\n\n        builder.addCase(checkAuthAsync.pending, (state) => { }),\n        builder.addCase(checkAuthAsync.fulfilled, (state) => { }),\n        builder.addCase(checkAuthAsync.rejected, (state) => { })\n    }\n})\n\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}