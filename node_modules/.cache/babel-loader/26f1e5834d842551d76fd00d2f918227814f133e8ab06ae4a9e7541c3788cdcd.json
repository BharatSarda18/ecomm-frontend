{"ast":null,"code":"import Config from \"./index\";\nexport const fetchProductById = async id => {\n  return Config.get(`/products/${id}`, {\n    id: id\n  });\n};\nexport const createProduct = async product => {\n  return Config.post(`/products/`, product);\n};\nexport const fetchProductsByFilters = async (filter, sort, pagination, admin) => {\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      queryString += `${key}=${categoryValues}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  if (admin) {\n    queryString += `admin=true`;\n  }\n  return Config.get(`/products?${queryString}`);\n};\nexport const fetchCategories = async () => {\n  return Config.get(`/categories`);\n};\nexport const fetchBrands = async () => {\n  return Config.get(`/brand`);\n};\nexport const updateProduct = async update => {\n  return Config.patch(`/products/${update === null || update === void 0 ? void 0 : update.id}`, update);\n};","map":{"version":3,"names":["Config","fetchProductById","id","get","createProduct","product","post","fetchProductsByFilters","filter","sort","pagination","admin","queryString","key","categoryValues","length","fetchCategories","fetchBrands","updateProduct","update","patch"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/services/productService.js"],"sourcesContent":["import Config from \"./index\";\n\nexport const fetchProductById = async (id) => {\n    return Config.get(`/products/${id}`, {\n        id: id\n    });\n};\n\nexport const createProduct = async (product) => {\n    return Config.post(`/products/`, product);\n};\n\nexport const fetchProductsByFilters = async (filter, sort, pagination, admin) => {\n    let queryString = '';\n    for (let key in filter) {\n        const categoryValues = filter[key];\n        if (categoryValues.length) {\n            queryString += `${key}=${categoryValues}&`;\n        }\n    }\n    for (let key in sort) {\n        queryString += `${key}=${sort[key]}&`;\n    }\n    for (let key in pagination) {\n        queryString += `${key}=${pagination[key]}&`;\n    }\n    if (admin) {\n        queryString += `admin=true`;\n    }\n    return Config.get(`/products?${queryString}`,);\n};\n\nexport const fetchCategories = async () => {\n    return Config.get(`/categories`);\n};\n\nexport const fetchBrands = async () => {\n    return Config.get(`/brand`);\n};\n\nexport const updateProduct = async (update) => {\n    return Config.patch(`/products/${update?.id}`, update);\n};"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAE5B,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,EAAE,IAAK;EAC1C,OAAOF,MAAM,CAACG,GAAG,CAAE,aAAYD,EAAG,EAAC,EAAE;IACjCA,EAAE,EAAEA;EACR,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,OAAOL,MAAM,CAACM,IAAI,CAAE,YAAW,EAAED,OAAO,CAAC;AAC7C,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,KAAK;EAC7E,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAK,IAAIC,GAAG,IAAIL,MAAM,EAAE;IACpB,MAAMM,cAAc,GAAGN,MAAM,CAACK,GAAG,CAAC;IAClC,IAAIC,cAAc,CAACC,MAAM,EAAE;MACvBH,WAAW,IAAK,GAAEC,GAAI,IAAGC,cAAe,GAAE;IAC9C;EACJ;EACA,KAAK,IAAID,GAAG,IAAIJ,IAAI,EAAE;IAClBG,WAAW,IAAK,GAAEC,GAAI,IAAGJ,IAAI,CAACI,GAAG,CAAE,GAAE;EACzC;EACA,KAAK,IAAIA,GAAG,IAAIH,UAAU,EAAE;IACxBE,WAAW,IAAK,GAAEC,GAAI,IAAGH,UAAU,CAACG,GAAG,CAAE,GAAE;EAC/C;EACA,IAAIF,KAAK,EAAE;IACPC,WAAW,IAAK,YAAW;EAC/B;EACA,OAAOZ,MAAM,CAACG,GAAG,CAAE,aAAYS,WAAY,EAAE,CAAC;AAClD,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,OAAOhB,MAAM,CAACG,GAAG,CAAE,aAAY,CAAC;AACpC,CAAC;AAED,OAAO,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,OAAOjB,MAAM,CAACG,GAAG,CAAE,QAAO,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMe,aAAa,GAAG,MAAOC,MAAM,IAAK;EAC3C,OAAOnB,MAAM,CAACoB,KAAK,CAAE,aAAYD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEjB,EAAG,EAAC,EAAEiB,MAAM,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}