{"ast":null,"code":"import Config from \"./index\";\nexport const loginUser = async loginInfo => {\n  return Config.post(`/auth/login`, loginInfo);\n};\nexport const createUser = async newUserInfo => {\n  return Config.post(`/auth/signup`, newUserInfo);\n};\nexport const checkAuth = async () => {\n  return Config.get(`/auth/check`);\n};\nexport const resetPasswordRequest = async newPasswordInfo => {\n  return Config.post(`/auth/reset-password-request`, newPasswordInfo);\n};\nexport const resetPassword = async newPasswordInfo => {\n  return Config.post(`/auth/reset-password`, newPasswordInfo);\n};","map":{"version":3,"names":["Config","loginUser","loginInfo","post","createUser","newUserInfo","checkAuth","get","resetPasswordRequest","newPasswordInfo","resetPassword"],"sources":["/home/bharat/myprojects/myecommerce-app/react-ecommerce/src/services/authService.js"],"sourcesContent":["import Config from \"./index\";\n\nexport const loginUser = async (loginInfo) => {\n    return Config.post(`/auth/login`,loginInfo);\n};\n\nexport const createUser = async (newUserInfo) => {\n    return Config.post(`/auth/signup`,newUserInfo);\n};\n\nexport const checkAuth=async()=>{\n    return Config.get(`/auth/check`);\n};\n\nexport const resetPasswordRequest = async (newPasswordInfo) => {\n    return Config.post(`/auth/reset-password-request`,newPasswordInfo);\n};\n\nexport const resetPassword = async (newPasswordInfo) => {\n    return Config.post(`/auth/reset-password`,newPasswordInfo);\n};\n\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAE5B,OAAO,MAAMC,SAAS,GAAG,MAAOC,SAAS,IAAK;EAC1C,OAAOF,MAAM,CAACG,IAAI,CAAE,aAAY,EAACD,SAAS,CAAC;AAC/C,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC7C,OAAOL,MAAM,CAACG,IAAI,CAAE,cAAa,EAACE,WAAW,CAAC;AAClD,CAAC;AAED,OAAO,MAAMC,SAAS,GAAC,MAAAA,CAAA,KAAS;EAC5B,OAAON,MAAM,CAACO,GAAG,CAAE,aAAY,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,eAAe,IAAK;EAC3D,OAAOT,MAAM,CAACG,IAAI,CAAE,8BAA6B,EAACM,eAAe,CAAC;AACtE,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOD,eAAe,IAAK;EACpD,OAAOT,MAAM,CAACG,IAAI,CAAE,sBAAqB,EAACM,eAAe,CAAC;AAC9D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}